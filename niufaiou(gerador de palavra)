#include <conio.h>
#include<stdio.h>
#include<stdlib.h> //rand()
#include <time.h> //time()
#include <windows.h> //sleep
#include <locale.h>

int sorteio ( int min, int max ) {
    return rand() % (max + 1 - min) + min ;
}

int main() {
    srand ( time ( 0 ) );
    char* nomeArquivo = "teste.txt";
    FILE *arquivo = fopen(nomeArquivo, "r");
    setlocale(LC_ALL, "Portuguese");
   

    //comprova que o arquivo foi aberto
    if( arquivo == NULL ) {
        perror("Erro: ");
        getchar();
        exit(1);
    }

    //Declaramos aqui as variaveis restantes. Não há lógica declarar variaveis se não existe arquivo aberto >_<
    char palavra[1024]; //guarda uma palavra qualquer de maximo 102 caracteres(Nunca vi palavra maior >_<)
    int nPalavras = 0;  //contador de palavras que haverá no arquivo
    int nSorteio;       //Guarda um numero sorteado de 0 a X que é o numero de palavras que podería conter no arquivo
    int i;

    //Contanmos quantas palavras tem o arquivo.
    while( fscanf( arquivo, "%s", palavra) != EOF ){
        //printf("%s\n", palavra);
        nPalavras++;
    }

    //"gerando" palavras
    while(1){
        //voltamos o ponteiro ao principio do arquivo para poder ler uma nova palavra
        rewind(arquivo);

        //Rand retorn um X numero.
        nSorteio = sorteio(0, nPalavras); //sorteia um numero de 0 a X. O X representa o numero de palavras que estão no arquivo
        //printf("*%d*", nSorteio); //Para saber que numeros estão gerando rand descomente esta linha

        //O que o for a continuação faz é: 
        //Capturar linha por linha, até chegar na linha X, que foi sorteada por rand. 
        //...Como esta será a ultima linha lida, conserva esta ultima linha(palavra). 
        /*
            Na realidade isso faz com que o ponteiro avance no arquivo, até a linha X que nos interessa, e como a ultima palavra capturada é 
            a linha de numero X que retornou rand, essa será a palavra que nos interessa, e é, a que será guardada por ultimo no 
            vetor palavra. Não é a forma mais elegante de se fazer, mas como se trata de um programa de estudos deixo desta forma.
        */
        for(i=0; i<nSorteio; i++){
                fscanf( arquivo, "%s", palavra);
        }

        printf(" %s\n", palavra);
        Sleep(500);
    }


    fclose(arquivo);

    return 0;
}//teste recebe um lero lero
